[package]
name = "{{{packageName}}}"
{{#description}}
description = "{{{.}}}"
{{/description}}
categories = ["api-bindings"]

version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
homepage.workspace = true
repository.workspace = true
license-file.workspace = true
keywords.workspace = true

[features]
default = []
wasm = ["dep:tsify", "dep:wasm-bindgen"] # WASM support

[dependencies]
serde = { workspace = true, features = ["derive"] }
{{#serdeWith}}
serde_with = { version = ">=3.8, <4", default-features = false, features = [
    "base64",
    "std",
    "macros"
] }
{{/serdeWith}}
serde_json = { workspace = true }
serde_repr = { workspace = true }
url = ">=2.5, <3"
{{#hasUUIDs}}
uuid = { workspace = true, features = ["serde", "v4", "js"] }
{{/hasUUIDs}}
{{#hyper}}
{{#hyper0x}}
hyper = { version = "~0.14", features = ["full"] }
hyper-tls = "~0.5"
{{/hyper0x}}
{{^hyper0x}}
hyper = { version = "^1.3.1", features = ["full"] }
hyper-util = { version = "0.1.5", features = ["client", "client-legacy", "http1", "http2"] }
http-body-util = { version = "0.1.2" }
{{/hyper0x}}
http = "~0.2"
base64 = "~0.7.0"
futures = "^0.3"
{{/hyper}}
{{#withAWSV4Signature}}
aws-sigv4 = "0.3.0"
http = "0.2.5"
secrecy = "0.8.0"
{{/withAWSV4Signature}}
{{#reqwest}}
{{^supportAsync}}
reqwest = { workspace = true, features = [
    "json",
    "blocking",
    "multipart",
    "http2",
], default-features = false }
{{#supportMiddleware}}
reqwest-middleware = { version = "^0.4", features = ["json", "blocking", "multipart"] }
{{/supportMiddleware}}
{{/supportAsync}}
{{#supportAsync}}
reqwest = { workspace = true, features = [
    "json",
    "multipart",
    "http2",
], default-features = false }
{{#supportMiddleware}}
reqwest-middleware = { version = "^0.4", features = ["json", "multipart"] }
{{/supportMiddleware}}
{{#supportTokenSource}}
async-trait = { workspace = true }
# TODO: propose to Yoshidan to externalize this as non google related crate, so that it can easily be extended for other cloud providers.
google-cloud-token = "^0.1"
{{/supportTokenSource}}
{{/supportAsync}}
{{/reqwest}}
{{#reqwestTrait}}
async-trait = { workspace = true }
reqwest = { workspace = true, features = [
    "json",
    "multipart",
    "http2",
], default-features = false }{{#supportMiddleware}}
reqwest-middleware = { version = "^0.4", features = ["json", "multipart"] }
{{/supportMiddleware}}
{{#supportTokenSource}}
# TODO: propose to Yoshidan to externalize this as non google related crate, so that it can easily be extended for other cloud providers.
google-cloud-token = "^0.1"
{{/supportTokenSource}}
{{#mockall}}
mockall = { version = "^0.13", optional = true}
{{/mockall}}
{{#useBonBuilder}}
bon = { version = "2.3", optional = true }
{{/useBonBuilder}}
[features]
default = ["native-tls"]
native-tls = ["reqwest/native-tls"]
rustls = ["reqwest/rustls-tls"]
{{#mockall}}
mockall = ["dep:mockall"]
{{/mockall}}
{{#useBonBuilder}}
bon = ["dep:bon"]
{{/useBonBuilder}}
{{/reqwestTrait}}
tsify = { workspace = true, optional = true, features = ["js"], default-features = false }
wasm-bindgen = { workspace = true, optional = true, features = ["serde-serialize"] }